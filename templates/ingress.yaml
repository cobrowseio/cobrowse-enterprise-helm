apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: {{ template "fullname" . }}
    chart: {{ template "chart" . }}
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
    stage: {{ .Values.stage | quote }}
  annotations:
    kubernetes.io/ingress.class: {{ .Values.ingress.class | quote }}
{{- if eq .Values.ssl.generator "cert-manager" }}
    certmanager.k8s.io/cluster-issuer: "{{ .Release.Name }}-letsencrypt-production"
    cert-manager.io/cluster-issuer: "{{ .Release.Name }}-letsencrypt-production"
    cert-manager.io/acme-challenge-type: "http01"
{{- end }}
{{- if eq .Values.ingress.class "gce" }}
    networking.gke.io/managed-certificates: "cobrowse-api-ssl"
    networking.gke.io/v1beta1.FrontendConfig: "api-frontend-config"
{{- else if eq .Values.ingress.class "azure/application-gateway" }}
    appgw.ingress.kubernetes.io/ssl-redirect: "true"
{{- else if eq .Values.ingress.class "nginx" }}
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
{{- else if eq .Values.ingress.class "alb" }}
    # https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.2/guide/ingress/annotations/
    alb.ingress.kubernetes.io/scheme: "internet-facing"
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/target-type: "ip"
    alb.ingress.kubernetes.io/healthcheck-path: /up
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-2-2017-01
{{- end }}
  {{- range $key, $value := .Values.ingress.annotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
  name: api-ingress
  namespace: {{ .Release.Namespace | default "default" }}
spec:
  defaultBackend:
    service:
      name: {{ .Release.Name }}-frontend-svc
      port:
        number: 8080
{{- if eq .Values.ssl.generator "cert-manager" }}
  tls:
  - hosts:
    - {{ .Values.domain }}
    secretName: "{{ .Release.Name }}-tls-secret"
{{- end }}
  rules:
  - host: {{ .Values.domain }}
    http:
      paths:
      - backend:
          service:
            name: {{ .Release.Name }}-api-svc
            port:
              number: 8080
        # Azure bug: https://github.com/Azure/application-gateway-kubernetes-ingress/issues/1238
        path: {{ ternary "/api/*" "/api" (eq .Values.ingress.class "azure/application-gateway") | quote }}
        pathType: Prefix
      - backend:
          service:
            name: {{ .Release.Name }}-recording-svc
            port:
              number: 8080
        # Azure bug: https://github.com/Azure/application-gateway-kubernetes-ingress/issues/1238
        path: {{ ternary "/recording/*" "/recording" (eq .Values.ingress.class "azure/application-gateway") | quote }}
        pathType: Prefix
      - backend:
          service:
            name: {{ .Release.Name }}-proxy-svc
            port:
              number: 8080
        # Azure bug: https://github.com/Azure/application-gateway-kubernetes-ingress/issues/1238
        path: {{ ternary "/proxy/*" "/proxy" (eq .Values.ingress.class "azure/application-gateway") | quote }}
        pathType: Prefix
      - backend:
          service:
            name: {{ .Release.Name }}-sockets-svc
            port:
              number: 8080
        # Azure bug: https://github.com/Azure/application-gateway-kubernetes-ingress/issues/1238
        path: {{ ternary "/sockets/*" "/sockets" (eq .Values.ingress.class "azure/application-gateway") | quote }}
        pathType: Prefix
