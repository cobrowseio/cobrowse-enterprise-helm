apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: {{ template "fullname" . }}
    chart: {{ template "chart" . }}
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
    stage: {{ .Values.stage | quote }}
  annotations:
    kubernetes.io/ingress.class: {{ .Values.ingress.class | quote }}
{{- if eq .Values.ingress.class "gce" }}
    networking.gke.io/v1beta1.FrontendConfig: "api-frontend-config"
{{- end }}
  {{- range $key, $value := .Values.ingress.annotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
  name: api-ingress
  namespace: {{ .Release.Namespace | default "default" }}
spec:
{{- if ((.Values.ingress).tls).secretName }}
  tls:
  - hosts:
    - {{ .Values.domain }}
  - secretName: {{ ((.Values.ingress).tls).secretName | quote }}
{{- end }}
  rules:
  - http:
      paths:
      - backend:
          service:
            name: {{ .Release.Name }}-api-svc
            port:
              number: 8080
        path: /api
        pathType: Prefix
      - backend:
          service:
            name: {{ .Release.Name }}-recording-svc
            port:
              number: 8080
        path: /recording
        pathType: Prefix
      - backend:
          service:
            name: {{ .Release.Name }}-proxy-svc
            port:
              number: 8080
        path: /proxy
        pathType: Prefix
      - backend:
          service:
            name: {{ .Release.Name }}-sockets-svc
            port:
              number: 8080
        path: /sockets
        pathType: Prefix
      - backend:
          service:
            name: {{ .Release.Name }}-frontend-svc
            port:
              number: 8080
        path: /
        pathType: Prefix
  {{- if ((.Values.ingress).tls).secretName }}
    host: {{ .Values.domain }}
  {{- end }}
